openapi: "3.0.0"
info:
  title: Warpdrive API
  version: "1.0.0"
  description: API for managing Warpdrive sessions and authentication
servers:
  - url: https://api.warpdrive.sh
    description: Production server
  #- url: https://staging.api.warpdrive.sh - only once we actually have users
  #  description: Staging server
  - url: http://localhost:8000
    description: Local development server
security:
  - BearerAuth: []
  - ApiKeyAuth: []
paths:
  /token:
    post:
      summary: Exchange API key for JWT token
      description: Exchange an API key for a JWT token. Intended to be called initially to obtain a token for subsequent requests
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: Successfully obtained JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for authentication
                  expires_in:
                    type: integer
                    description: Token expiration time in seconds
                required:
                  - token
                  - expires_in
        "401":
          description: Invalid API key
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /sessions:
    get:
      summary: List all running sessions
      description: List all running sessions for the current user
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
          description: Maximum results to return
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
          description: Results offset for pagination
        - name: statuses
          in: query
          required: false
          schema:
            type: string
          description: Comma-separated list of session statuses to filter by
      responses:
        "200":
          description: Successfully retrieved sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SessionDesc"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      summary: Create a new session
      description: Create a new session with specified configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                machine_id:
                  type: string
                  description: Machine config ID
                region:
                  type: string
                  description: Region config ID
                no_join:
                  type: boolean
                  description: Forbids other terminals from joining the session
                pub_key:
                  type: string
                  description: Public key for SSH access
              required:
                - machine_id
                - region
                - pub_key
      responses:
        "201":
          description: Session created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Session"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /sessions/{session_id}/approve:
    post:
      summary: Approve a session for joining
      description: Approve a session for joining by adding the specified public key
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier for the session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pub_key:
                  type: string
                  description: Public key to add to the session
                user:
                  type: string
                  description: VM user to create
                client_ip:
                  type: string
                  description: IP address of the client requesting approval
                joiner_uuid:
                  type: string
                  description: UUID tied to the joiner SSE subject
              required:
                - pub_key
                - user
                - client_ip
                - joiner_uuid
      responses:
        "200":
          description: Session join request approved successfully
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Session not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /sessions/{session_id}/reject:
    post:
      summary: Reject a session for joining
      description: Reject a session join request
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier for the session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                joiner_uuid:
                  type: string
                  description: UUID tied to the joiner SSE subject
              required:
                - joiner_uuid
      responses:
        "200":
          description: Session join request rejected successfully
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Session not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /sessions/{session_id}/guests:
    get:
      summary: List all guests in a session
      description: List all guests in a session
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier for the session
      responses:
        "200":
          description: Successfully retrieved session guests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GuestDesc"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Session not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /sse/session/{session_id}/owner:
    get:
      summary: Subscribe to session owner events
      description: Subscribe to Server-Sent Events for session owner, including join requests
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier for the session
      responses:
        "200":
          description: Successfully subscribed to session owner events
          content:
            text/event-stream:
              schema:
                type: string
                description: Server-Sent Events stream
              examples:
                join_requested:
                  summary: Join request event
                  value: |
                    event: join_requested
                    data: {"alias": "Session Alias", "subject_uuid": "Joiner SSE Subject UUID", "region": "Joiner Region", "pub_key": "Joiner Public Key", "user": "Joiner Proposed VM User", "client_ip": "Joiner Client IP"}
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Session not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /sse/session/alias/{alias}/guest:
    post:
      summary: Request to join a session as a guest
      description: Request to join a session as a guest and subscribe to response events
      parameters:
        - name: alias
          in: path
          required: true
          schema:
            type: string
          description: Session alias
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pub_key:
                  type: string
                  description: Public key to add to the session
                user:
                  type: string
                  description: VM user to create
              required:
                - pub_key
                - user
      responses:
        "200":
          description: Successfully requested to join session and subscribed to events
          content:
            text/event-stream:
              schema:
                type: string
                description: Server-Sent Events stream
              examples:
                join_approved:
                  summary: Join request approved
                  value: |
                    event: join_request_outcome
                    data: {"status": "approved"}
                join_denied:
                  summary: Join request denied
                  value: |
                    event: join_request_outcome
                    data: {"status": "denied", "reason": "owner_denied_join"}
                user_already_in_session:
                  summary: User already in session
                  value: |
                    event: join_request_outcome
                    data: {"status": "denied", "reason": "user_already_in_session"}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Session not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /user/guest_sessions:
    get:
      summary: List all sessions the current user has joined as a guest
      description: List all sessions the current user has joined as a guest
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
          description: Maximum results to return
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
          description: Results offset for pagination
      responses:
        "200":
          description: Successfully retrieved guest sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GuestSessionDesc"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /user/api_keys:
    get:
      summary: List API keys for the current user
      description: List all API keys for the current user
      responses:
        "200":
          description: Successfully retrieved API keys
          content:
            application/json:
              schema:
                type: object
                properties:
                  api_keys:
                    type: array
                    items:
                      $ref: "#/components/schemas/ApiKeyDesc"
                required:
                  - api_keys
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new API key
      description: Create a new API key for the current user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                expires_in_days:
                  type: integer
                  description: Number of days until the API key expires (optional)
      responses:
        "201":
          description: API key created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  api_key:
                    type: string
                    description: The generated API key
                required:
                  - api_key
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /user/api_keys/{id}:
    delete:
      summary: Delete an API key
      description: Delete an API key by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the API key to delete
      responses:
        "200":
          description: API key deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: ID of the deleted API key
                required:
                  - id
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: API key not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /user/usage:
    get:
      summary: Get user usage data
      description: Get usage data rollups for the current user
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: number
            format: float
          description: Start date filter (Unix timestamp)
        - name: end_date
          in: query
          required: false
          schema:
            type: number
            format: float
          description: End date filter (Unix timestamp)
      responses:
        "200":
          description: Successfully retrieved usage data
          content:
            application/json:
              schema:
                type: object
                properties:
                  usage:
                    type: array
                    items:
                      $ref: "#/components/schemas/UsageDayRollup"
                required:
                  - usage
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /user/invoices:
    get:
      summary: Get user invoices
      description: Get all invoices for the current user
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 50
          description: Maximum results to return
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
          description: Results offset for pagination
      responses:
        "200":
          description: Successfully retrieved invoices
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoices:
                    type: array
                    items:
                      $ref: "#/components/schemas/Invoice"
                required:
                  - invoices
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /user/invoices/line_items:
    get:
      summary: Get user invoice line items
      description: Get historical and pending invoice line items for the current user
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: number
            format: float
          description: Start date filter (Unix timestamp)
        - name: end_date
          in: query
          required: false
          schema:
            type: number
            format: float
          description: End date filter (Unix timestamp)
      responses:
        "200":
          description: Successfully retrieved invoice line items
          content:
            application/json:
              schema:
                type: object
                properties:
                  line_items:
                    type: array
                    items:
                      $ref: "#/components/schemas/InvoiceLineItem"
                required:
                  - line_items
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /search/machines:
    get:
      summary: Search for available machine types
      description: Search for available machine types with optional filters
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
          description: Optional machine name filter
        - name: region
          in: query
          required: false
          schema:
            type: string
          description: Optional region filter
        - name: cloud_provider
          in: query
          required: false
          schema:
            type: string
          description: Optional cloud provider filter
        - name: vcpus
          in: query
          required: false
          schema:
            type: integer
          description: Optional CPU count filter
        - name: memory_mib
          in: query
          required: false
          schema:
            type: integer
          description: Optional memory size filter (in MiB)
        - name: gpu_count
          in: query
          required: false
          schema:
            type: integer
          description: Optional GPU count filter
        - name: gpu_model
          in: query
          required: false
          schema:
            type: string
          description: Optional GPU model filter
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
          description: Maximum results to return
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
          description: Results offset for pagination
      responses:
        "200":
          description: Successfully retrieved machine search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  client_region:
                    type: string
                    description: Region of requesting client
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Machine"
                required:
                  - results
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /search/images:
    get:
      summary: Search for available images
      description: Search for available images with optional filters
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
          description: Optional image name filter
        - name: cloud_provider
          in: query
          required: false
          schema:
            type: string
          description: Optional cloud provider filter
        - name: os
          in: query
          required: false
          schema:
            type: string
          description: Optional operating system filter
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
          description: Maximum results to return
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
          description: Results offset for pagination
      responses:
        "200":
          description: Successfully retrieved image search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Image"
                required:
                  - results
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /search/machines/featured:
    get:
      summary: Get featured machine types
      description: Get a list of featured machine types
      responses:
        "200":
          description: Successfully retrieved featured machines
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Machine"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /search/images/featured:
    get:
      summary: Get featured images
      description: Get a list of featured images
      responses:
        "200":
          description: Successfully retrieved featured images
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Image"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /price_estimate:
    post:
      summary: Get price estimate for a machine
      description: Get price estimate for a specific machine in a region with a metric
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PriceEstimateRequest"
      responses:
        "200":
          description: Successfully retrieved price estimate
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Price"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from /token endpoint
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication

  schemas:
    Session:
      type: object
      properties:
        session_id:
          type: string
          description: Unique identifier for the session
        alias:
          type: string
          description: Alias for the session
        region:
          type: string
          description: Container hosting region
        no_join:
          type: boolean
          description: Whether other terminals can join
        machine_id:
          type: string
          description: Machine configuration ID
        started_at:
          type: string
          format: date-time
          description: Timestamp of session creation
      required:
        - session_id
        - alias
        - region
        - machine_id
        - started_at
    SessionDesc:
      type: object
      properties:
        session_id:
          type: string
          description: Unique identifier for the session
        alias:
          type: string
          description: Alias for the session
        region:
          type: string
          description: Container hosting region
        no_join:
          type: boolean
          description: Whether other terminals can join
        machine_id:
          type: string
          description: Machine configuration ID
        image_id:
          type: string
          description: Image configuration ID
        image_name:
          type: string
          description: Name of the image
        started_at:
          type: string
          format: date-time
          description: Timestamp of session creation
        status:
          type: string
          description: Current status of the session
      required:
        - session_id
        - alias
        - region
        - machine_id
        - image_id
        - image_name
        - started_at
        - status

    GuestDesc:
      type: object
      properties:
        user_id:
          type: string
          description: User ID of the guest
        joined_at:
          type: string
          format: date-time
          description: Timestamp when the guest joined the session
      required:
        - user_id
        - joined_at

    GuestSessionDesc:
      type: object
      properties:
        joined_at:
          type: string
          format: date-time
          description: Timestamp when the user joined the session as a guest
        session:
          $ref: "#/components/schemas/SessionDesc"
      required:
        - joined_at
        - session

    JoinRequestEvent:
      type: object
      properties:
        alias:
          type: string
          description: Session alias
        subject_uuid:
          type: string
          description: Joiner SSE Subject UUID
        region:
          type: string
          description: Joiner region
        pub_key:
          type: string
          description: Joiner public key
        user:
          type: string
          description: Joiner proposed VM user
        client_ip:
          type: string
          description: Joiner client IP
      required:
        - alias
        - subject_uuid
        - region
        - pub_key
        - user
        - client_ip

    JoinOutcomeEvent:
      type: object
      properties:
        status:
          type: string
          enum: [approved, denied]
          description: Status of the join request
        reason:
          type: string
          enum: [user_already_in_session, owner_denied_join, undefined]
          description: Reason for denial (only present when status is denied)
      required:
        - status

    Machine:
      type: object
      properties:
        id:
          type: string
          description: Machine ID
        name:
          type: string
          description: Machine name
        description:
          type: string
          description: Machine description
        href:
          type: string
          description: Machine reference URL
        cloud:
          type: string
          description: Cloud provider
        not_in_regions:
          type: array
          items:
            type: string
          description: Regions where machine is not available
        featured:
          type: boolean
          description: Whether the machine is featured
        vcpus:
          type: integer
          description: Number of virtual CPUs
        memory_mib:
          type: integer
          description: Memory size in MiB
        arch:
          type: string
          description: CPU architecture
        gpu_count:
          type: integer
          description: Number of GPUs
        gpu_model:
          type: string
          description: GPU model
      required:
        - id
        - name
        - description
        - href
        - cloud
        - vcpus
        - memory_mib

    Image:
      type: object
      properties:
        id:
          type: string
          description: Image ID
        name:
          type: string
          description: Image name
        friendly_name:
          type: string
          description: User-friendly image name
        featured:
          type: boolean
          description: Whether the image is featured
        description:
          type: string
          description: Image description
        os:
          type: string
          description: Operating system
        href:
          type: string
          description: Image reference URL
        arch:
          type: array
          items:
            type: string
          description: Supported CPU architectures
        cloud:
          type: string
          description: Cloud provider
      required:
        - id
        - name
        - description
        - os
        - href
        - cloud

    ApiKeyDesc:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the API key
        created_at:
          type: number
          format: float
          description: Timestamp when the API key was created (Unix seconds)
        expires_at:
          type: number
          format: float
          description: Timestamp when the API key expires (Unix seconds)
        last_used_at:
          type: number
          format: float
          description: Timestamp when the API key was last used (Unix seconds)
        last_used_by_ip:
          type: string
          description: IP address from which the API key was last used
        last_used_in_region:
          type: string
          description: Region from which the API key was last used
      required:
        - id
        - created_at
        - expires_at
        - last_used_at

    UsageDayRollup:
      type: object
      properties:
        day:
          type: number
          format: float
          description: Day timestamp (Unix seconds at start of day, nullable)
          nullable: true
        machine_id:
          type: string
          description: Machine ID for this usage data
        region:
          type: string
          description: Region for this usage data
        metric:
          type: string
          description: Usage metric type
        value:
          type: number
          format: float
          description: Usage metric value
      required:
        - day
        - machine_id
        - region
        - metric
        - value

    InvoiceLineItem:
      type: object
      properties:
        user_id:
          type: string
          description: User ID for this line item
        day:
          type: number
          format: float
          description: Day timestamp (Unix seconds at start of day)
        period_start:
          type: number
          format: float
          description: Period start timestamp (Unix seconds)
        period_end:
          type: number
          format: float
          description: Period end timestamp (Unix seconds)
        metric:
          type: string
          description: Billing metric type
        unit:
          type: string
          description: Unit of measurement
        quantity:
          type: number
          format: float
          description: Quantity for this line item
        amount_usd:
          type: number
          format: float
          description: Amount in USD for this line item
        machine_id:
          type: string
          description: Machine ID associated with this line item
        region:
          type: string
          description: Region associated with this line item
      required:
        - user_id
        - period_start
        - period_end
        - metric
        - unit
        - quantity
        - amount_usd
        - machine_id
        - region

    PriceEstimateRequest:
      type: object
      properties:
        machine_id:
          type: string
          description: Machine configuration ID
        region:
          type: string
          description: Region for price estimate (optional)
        metric:
          type: string
          description: Pricing metric
      required:
        - machine_id
        - metric

    Price:
      type: object
      properties:
        machine_id:
          type: string
          description: Machine configuration ID
        region:
          type: string
          description: Region for this price
        usd_per_unit:
          type: number
          format: float
          description: Price in USD per unit
        metric:
          type: string
          description: Pricing metric
      required:
        - machine_id
        - region
        - usd_per_unit
        - metric

    Invoice:
      type: object
      properties:
        local:
          $ref: "#/components/schemas/LocalInvoice"
          description: Local invoice details
        stripe:
          $ref: "#/components/schemas/StripeInvoice"
          description: Stripe invoice details
      required:
        - local

    StripeInvoice:
      type: object
      properties:
        id:
          type: string
          description: Stripe invoice ID
        hosted_invoice_url:
          type: string
          description: URL to view the invoice
        invoice_pdf:
          type: string
          description: URL to download the invoice as a PDF
        paid:
          type: boolean
          description: Whether the invoice has been paid
        due_date:
          type: number
          format: float
          description: Invoice due date timestamp
      required:
        - invoice_id
        - hosted_invoice_url
        - pdf_url
        - paid
        - due_date

    LocalInvoice:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the invoice
        user_id:
          type: string
          description: User ID for this invoice
        period_start:
          type: number
          format: float
          description: Period start timestamp (Unix seconds)
        period_end:
          type: number
          format: float
          description: Period end timestamp (Unix seconds)
        total_usd:
          type: number
          format: float
          description: Total amount in USD for this invoice
        created_at:
          type: number
          format: float
          description: Invoice creation timestamp (Unix seconds)
        paid:
          type: boolean
          description: Whether the invoice has been paid
        line_items:
          type: array
          items:
            $ref: "#/components/schemas/InvoiceLineItem"
          description: Line items for this invoice
      required:
        - id
        - user_id
        - period_start
        - period_end
        - total_usd
        - created_at
        - paid
        - line_items

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
      required:
        - error
